<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        a4FP2PwAAAAASUVORK5CYII=
</value>
  </data>
</root>